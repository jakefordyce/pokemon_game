local game_state = require "common/game_state"
local starters = require "common/starters"
local pbs = require "common/poke_base_stats"
local addable_mons = {}
local selected_mons = {}
local current_mon = {}
local num_selected = 0
local adding_mon = true


function init(self)
	msg.post(".", "acquire_input_focus")
	gui.set_enabled(gui.get_node("preview_panel"), false)
	if game_state.starters_chosen then
		for i=5,16 do
			gui.set_enabled(gui.get_node("addable"..i), false)
			gui.set_enabled(gui.get_node("addable_bg"..i), false)
		end
	end
	for i=1,4 do
		gui.set_enabled(gui.get_node("added"..i), false)
	end
	load_mons()
	msg.post(".", "display_pokemon")
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("display_pokemon") then
		if game_state.starters_chosen then
			display_wild_mon()
		else
			display_starters()
		end
		display_selected_mons()
	end
end

function on_input(self, action_id, action)
	if(action_id == hash("touch") and action.released == true) then
		if(gui.pick_node(gui.get_node("done_button"),action.x,action.y) and node_enabled(gui.get_node("done_button"))) then
			for i=1,4 do
				if selected_mons[i] ~= nil then
					game_state.add_pokemon(addable_mons[selected_mons[i]].pokedex, addable_mons[selected_mons[i]].level)
				end
			end
			if game_state.starters_chosen == false then
				game_state.starters_chosen = true
			end
			msg.post("main:/loader#main", "close_add_mon")
		end
		if(gui.pick_node(gui.get_node("addable1"),action.x,action.y) and node_enabled(gui.get_node("addable1"))) then
			display_preview(1)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable2"),action.x,action.y) and node_enabled(gui.get_node("addable2"))) then
			display_preview(2)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable3"),action.x,action.y) and node_enabled(gui.get_node("addable3"))) then
			display_preview(3)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable4"),action.x,action.y) and node_enabled(gui.get_node("addable4"))) then
			display_preview(4)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable5"),action.x,action.y) and node_enabled(gui.get_node("addable5"))) then
			display_preview(5)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable6"),action.x,action.y) and node_enabled(gui.get_node("addable6"))) then
			display_preview(6)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable7"),action.x,action.y) and node_enabled(gui.get_node("addable7"))) then
			display_preview(7)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable8"),action.x,action.y) and node_enabled(gui.get_node("addable8"))) then
			display_preview(8)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable9"),action.x,action.y) and node_enabled(gui.get_node("addable9"))) then
			display_preview(9)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable10"),action.x,action.y) and node_enabled(gui.get_node("addable10"))) then
			display_preview(10)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable11"),action.x,action.y) and node_enabled(gui.get_node("addable11"))) then
			display_preview(11)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable12"),action.x,action.y) and node_enabled(gui.get_node("addable12"))) then
			display_preview(12)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable13"),action.x,action.y) and node_enabled(gui.get_node("addable13"))) then
			display_preview(13)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable14"),action.x,action.y) and node_enabled(gui.get_node("addable14"))) then
			display_preview(14)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable15"),action.x,action.y) and node_enabled(gui.get_node("addable15"))) then
			display_preview(15)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("addable16"),action.x,action.y) and node_enabled(gui.get_node("addable16"))) then
			display_preview(16)
			gui.set_text(gui.get_node("move_text"), "Add")
			adding_mon = true
		end
		if(gui.pick_node(gui.get_node("added1"),action.x,action.y) and node_enabled(gui.get_node("added1"))) then
			display_preview(selected_mons[1])
			gui.set_text(gui.get_node("move_text"), "Remove")
			adding_mon = false
		end
		if(gui.pick_node(gui.get_node("added2"),action.x,action.y) and node_enabled(gui.get_node("added2"))) then
			display_preview(selected_mons[2])
			gui.set_text(gui.get_node("move_text"), "Remove")
			adding_mon = false
		end
		if(gui.pick_node(gui.get_node("added3"),action.x,action.y) and node_enabled(gui.get_node("added3"))) then
			display_preview(selected_mons[3])
			gui.set_text(gui.get_node("move_text"), "Remove")
			adding_mon = false
		end
		if(gui.pick_node(gui.get_node("added4"),action.x,action.y) and node_enabled(gui.get_node("added4"))) then
			display_preview(selected_mons[4])
			gui.set_text(gui.get_node("move_text"), "Remove")
			adding_mon = false
		end
		if(gui.pick_node(gui.get_node("move_button"),action.x,action.y) and node_enabled(gui.get_node("move_button"))) then
			move_current()
			msg.post(".", "display_pokemon")
		end
	end
end

function on_reload(self)
end

function load_mons()
	if game_state.starters_chosen then
		for i=1,4 do
			if game_state["enemy_mon"..i] ~= nil then
				new_mon = {
					pokedex = game_state["enemy_mon"..i].pokedex,
					level = game_state["enemy_mon"..i].level,
					available = true
				}
				table.insert(addable_mons, new_mon)
			end
		end
	else
		for i=1,16 do
			new_mon = {
				pokedex = starters.ids[i],
				level = starters.starter_level,
				available = true
			}
			table.insert(addable_mons, new_mon)
		end
	end
end

function move_current()
	if adding_mon and addable_mons[current_mon].available and num_selected < 4 then
		addable_mons[current_mon].available = false
		mon_added = false
		for i=1,4 do
			if selected_mons[i] == nil and not mon_added then
				selected_mons[i] = current_mon
				mon_added = true
			end
		end
		num_selected = num_selected + 1
		gui.set_text(gui.get_node("move_text"), "Remove")
		adding_mon = false
	elseif not adding_mon then
		addable_mons[current_mon].available = true
		for i=1,4 do
			if selected_mons[i] == current_mon then
				selected_mons[i] = nil
			end
		end
		num_selected = num_selected - 1
		gui.set_text(gui.get_node("move_text"), "Add")
		adding_mon = true
	end
end

function display_preview(addable)
	local pokedex = 1
	local level = 1
	current_mon = addable
	gui.set_enabled(gui.get_node("preview_panel"), true)
	if game_state.starters_chosen then
		pokedex = game_state["enemy_mon"..addable].pokedex
		level = game_state["enemy_mon"..addable].level
	else
		pokedex = starters.ids[addable]
		level = starters.starter_level
	end
	game_state.generate_preview_mon(pokedex, level)
	mon = game_state.preview_mon
	gui.set_text(gui.get_node("details_name"), mon.name)
	gui.set_text(gui.get_node("details_hp"), mon.hp)
	gui.set_text(gui.get_node("details_attack"), mon.attack)
	gui.set_text(gui.get_node("details_spattack"), mon.spattack)
	gui.set_text(gui.get_node("details_defense"), mon.defense)
	gui.set_text(gui.get_node("details_spdefense"), mon.spdefense)
	gui.set_text(gui.get_node("details_speed"), mon.speed)
	gui.set_text(gui.get_node("details_accuracy"), mon.accuracy)
	gui.set_text(gui.get_node("details_resist"), mon.resist)
	gui.set_text(gui.get_node("details_crit_chance"), (mon.crit_chance.."%"))
	gui.set_text(gui.get_node("details_crit_damage"), (mon.crit_damage.."%"))
end

function display_starters()
	gui.set_text(gui.get_node("instruction_text"), "Choose your team")
	for i=5,16 do
		gui.set_enabled(gui.get_node("addable"..i), true)
		gui.set_enabled(gui.get_node("addable_bg"..i), true)
	end
	for s=1,16 do
		if addable_mons[s].available then
			gui.set_enabled(gui.get_node("addable"..s), true)
			gui.play_flipbook(gui.get_node("addable"..s), pbs[starters.ids[s]].name.."_front_original")
		else
			gui.set_enabled(gui.get_node("addable"..s), false)
		end
	end
end

function display_wild_mon()
	gui.set_text(gui.get_node("instruction_text"), "Choose Pokemon to catch")
	for i=5,16 do
		gui.set_enabled(gui.get_node("addable"..i), false)
		gui.set_enabled(gui.get_node("addable_bg"..i), false)
	end
	for s=1,4 do
		if game_state["enemy_mon"..s] ~= nil and addable_mons[s].available then
			gui.play_flipbook(gui.get_node("addable"..s), game_state["enemy_mon"..s].name.."_front_original")
		else
			gui.set_enabled(gui.get_node("addable"..s), false)
		end
	end
end

function display_selected_mons()
	for s=1,4 do
		if selected_mons[s] ~= nil then
			gui.play_flipbook(gui.get_node("added"..s), pbs[addable_mons[selected_mons[s]].pokedex].name.."_front_original")
			gui.set_enabled(gui.get_node("added"..s), true)
		else
			gui.set_enabled(gui.get_node("added"..s), false)
		end
	end
end

function node_enabled(node)
	local parent = gui.get_parent(node)
	local enabled = gui.is_enabled(node)
	if parent then
		return enabled and gui.is_enabled(parent)
	end
	return enabled
end