go.property("boss_index", 1)
go.property("level", 5)
local types = require "common/poke_types"
local boss_stats = require "common/boss_stats"
local encounters = require "common/encounters"

function init(self)
	
	local minimum_reward = boss_stats.minimum_reward(self.boss_index, self.level)
	local max_reward = boss_stats.maximum_reward(self.boss_index, self.level)
	local reward_types = boss_stats.reward_stone_types(self.boss_index)
	local type1 = reward_types[1]
	local type2 = reward_types[2]
	
	label.set_text("#boss_level", "Level: "..self.level)
	msg.post("#boss_type1", "play_animation", { id = hash("type_"..types[type1].name.."_16") })
	msg.post("#stone_type1", "play_animation", { id = hash("type_"..types[type1].name.."_16") })
	label.set_text("#stone_reward1", minimum_reward.." - "..max_reward)
	if type2 ~= nil then
		msg.post("#boss_type2", "play_animation", { id = hash("type_"..types[type2].name.."_16") })
		msg.post("#stone_type2", "play_animation", { id = hash("type_"..types[type2].name.."_16") })
		label.set_text("#stone_reward2", minimum_reward.." - "..max_reward)
	else
		msg.post("#boss_type2", "disable")
		msg.post("#stone_type2", "disable")
		msg.post("#stone_reward2", "disable")
	end
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.other_group == hash("cursor") then
			msg.post("main:/loader#main", "load_choose_team", {battle_type = 3, battle_id = self.boss_index, level = self.level})
		end
	end
end

function on_input(self, action_id, action)
end

function on_reload(self)
end
