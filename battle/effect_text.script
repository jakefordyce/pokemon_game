go.property("duration", 60)
local colors = {}
colors["grey"] = vmath.vector4(0.5, 0.5, 0.5, 1.0)
colors["white"] = vmath.vector4(1, 1, 1, 1.0)
colors["yellow"] = vmath.vector4(1, 1, 0, 1.0)
colors["red"] = vmath.vector4(1, 0, 0, 1.0)
colors["green"] = vmath.vector4(0, 1, 0, 1.0)

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local p = go.get_position()
	p.y = p.y + 1
	go.set_position(p)
	
	self.duration = self.duration - 1
	
	if self.duration < 1 then
		go.delete()
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set_values") then
		label.set_text("#label", message.label_text)
		go.set("#label", "color", colors[message.label_color])
	end	
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
