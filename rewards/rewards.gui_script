local game_state = require "common/game_state"
local pbs = require "common/poke_base_stats"
local exp_gained = 0

function init(self)
	msg.post(".", "acquire_input_focus")
	calc_exp()
	display_mons()
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)

end

function on_input(self, action_id, action)
	
end

function on_reload(self)
end

function display_mons()
	for i=1,4 do
		if game_state["player_mon"..i] ~= nil then
			gui.set_enabled(gui.get_node("player_mon"..i), true)
			gui.play_flipbook(gui.get_node("player_mon"..i), pbs[game_state["player_mon"..i]].name.."_front_original")
			gui.set_text(gui.get_node("player_mon"..i.."_exp_text"), "+"..exp_gained.."exp")
			game_state.pokemon[game_state["player_mon"..i]].exp = game_state.pokemon[game_state["player_mon"..i]].exp + exp_gained
			new_size = vmath.vector3((game_state.pokemon[game_state["player_mon"..i]].exp / pbs.exp_to_next_level(game_state.pokemon[game_state["player_mon"..i]].level) * 100), 10, 0)
			gui.set_size(gui.get_node("player_mon"..i.."_exp"), new_size)
		else
			gui.set_enabled(gui.get_node("player_mon"..i), false)
		end
	end
end

function calc_exp()
	exp_gained = 0
	for i=1,4 do
		if game_state["enemy_mon"..i] ~= nil then
			exp_gained = exp_gained + pbs.exp_reward_by_level(game_state["enemy_mon"..i].level)
		end
	end
end