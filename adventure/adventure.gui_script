local dialogs = require "common/dialogs"
local current_dialog_id = nil
local dialog_is_displaying = false
local waiting_for_choice = false
local choice_is_yes = true
local dialog_sender = nil

function init(self)
	msg.post(".", "acquire_input_focus")
	gui.set_enabled(gui.get_node("dialog_panel"), false)
	gui.set_enabled(gui.get_node("choices_panel"), false)
	gui.set_enabled(gui.get_node("yes_cursor"), false)
	gui.set_enabled(gui.get_node("no_cursor"), false)
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
	if(message_id == hash("load_dialog")) then
		dialog_sender = sender
		begin_dialog(message.dialog_id)
	end
end

function on_input(self, action_id, action)
	if(action_id == hash("touch")) then
		if(gui.pick_node(gui.get_node("button_left"),action.x,action.y) and not dialog_is_displaying) then
			msg.post("player", "button_left")
		end
		if(gui.pick_node(gui.get_node("button_right"),action.x,action.y) and not dialog_is_displaying) then
			msg.post("player", "button_right")
		end
		if(gui.pick_node(gui.get_node("button_up"),action.x,action.y)) then
			if dialog_is_displaying then
				if waiting_for_choice then
					choice_is_yes = true
					gui.set_enabled(gui.get_node("yes_cursor"), true)
					gui.set_enabled(gui.get_node("no_cursor"), false)
				end
			else
				msg.post("player", "button_up")
			end
		end
		if(gui.pick_node(gui.get_node("button_down"),action.x,action.y)) then
			if dialog_is_displaying then
				if waiting_for_choice then
					choice_is_yes = false
					gui.set_enabled(gui.get_node("yes_cursor"), false)
					gui.set_enabled(gui.get_node("no_cursor"), true)
				end
			else
				msg.post("player", "button_down")
			end
		end
		if(gui.pick_node(gui.get_node("button_plus"),action.x,action.y) and not dialog_is_displaying) then
			msg.post("player", "open_menu")
		end
		if(gui.pick_node(gui.get_node("button_a"),action.x,action.y) and action.released == true) then
			if dialog_is_displaying then
				if waiting_for_choice then
					gui.set_enabled(gui.get_node("choices_panel"), false)
					msg.post(dialog_sender, "choice_made", {dialog_id = current_dialog_id, choice = choice_is_yes})
					waiting_for_choice = false
				else
					gui.set_enabled(gui.get_node("dialog_panel"), false)
					dialog_is_displaying = false
					msg.post(dialog_sender, "dialog_end", {dialog_id = current_dialog_id})
				end
			else
				msg.post("player", "interact")
			end
		end
	end
end

function on_reload(self)
end

function begin_dialog(dialog_id)
	dialog_is_displaying = true
	gui.set_enabled(gui.get_node("dialog_panel"), true)
	gui.set_text(gui.get_node("dialog_text"), dialogs[dialog_id].text)
	if dialogs[dialog_id].has_choices then
		waiting_for_choice = true
		gui.set_enabled(gui.get_node("choices_panel"), true)
		gui.set_enabled(gui.get_node("yes_cursor"), true)
	end
	
end