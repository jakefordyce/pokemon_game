local game_state = require "common/game_state"
local encounters = require "common/encounters"

function init(self)
	msg.post(".", "acquire_input_focus")
	local current_league_name = encounters.get_league_name(game_state.player.rating)
	local next_league_rating = encounters.get_next_league_rating(game_state.player.rating)
	local next_league_name = encounters.get_league_name(next_league_rating)
	local next_league_progress
	if game_state.player.rating < 1000 then
		next_league_progress = (game_state.player.rating % 200) / 200
	else
		next_league_progress = 1
	end
	
	gui.set_text(gui.get_node("current_league"), current_league_name)
	gui.set_text(gui.get_node("next_league"), next_league_name)
	gui.set_text(gui.get_node("player_rating"), game_state.player.rating.." / "..next_league_rating)
	local bar_size = vmath.vector3((next_league_progress * 250), 25, 0)
	gui.set_size(gui.get_node("player_rating_bar"), bar_size)
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
	if(action_id == hash("touch") and action.pressed == true) then
		if(gui.pick_node(gui.get_node("close_button"),action.x,action.y) and node_enabled(gui.get_node("close_button"))) then
			return true
		end
	elseif(action_id == hash("touch") and action.released == true) then
		if(gui.pick_node(gui.get_node("close_button"),action.x,action.y) and node_enabled(gui.get_node("close_button"))) then
			msg.post("main:/loader#main", "close_poke_league")
			return true
		end
	end
end

function on_reload(self)
end

function node_enabled(node)
	local parent = gui.get_parent(node)
	local enabled = gui.is_enabled(node)
	if parent then
		return enabled and node_enabled(parent)
	end
	return enabled
end