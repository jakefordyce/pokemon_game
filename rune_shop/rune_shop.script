local game_state = require "common/game_state"
local spawned_rune_icons = {}

function init(self)
	msg.post(".", "acquire_input_focus")
	self.current_pos = go.get_position()
	self.pressed_pos = go.get_position()
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("display_player_runes") then
		display_player_runes()
	end
	if message_id == hash("display_shop_runes") then

	end
end

function on_input(self, action_id, action)
	if action.pressed then
		self.drag = true		
		self.current_pos = go.get_position()
		self.pressed_pos = vmath.vector3(self.current_pos.x, action.y, 0)
	elseif action.released then
		self.drag = false
		released_pos = vmath.vector3(self.current_pos.x, action.y, 0)
		drag_distance = vmath.length(released_pos - self.pressed_pos)
		if drag_distance < 20 then
			p = vmath.vector3(action.x, action.y, 0)
			factory.create("#cursor_factory",p)
		end
	end

	if self.drag then
		local pos = self.current_pos - self.pressed_pos + vmath.vector3(self.current_pos.x, action.y, 0)
		go.set_position(limit(self, pos))
	end
end

function on_reload(self)
end

function display_player_runes()
	local p = vmath.vector3()
	p.y = 1050
	p.x = 32

	for i, rune in ipairs(game_state.runes) do
		--if rune.equipped_id == nil
		local icon = factory.create("#rune_factory",p, nil, {rune_id = i})
		go.set_parent(icon, go.get_id("rune_shop"))
		table.insert(spawned_rune_icons, icon)

		p.x = p.x + 70 --each image is 64 wide. Also adding a little extra space.
	end
end

function limit(self, pos)
	local top = 100 
	local bottom = 0
	pos.y = math.min(pos.y, top)
	pos.y = math.max(pos.y, bottom)
	return pos
end

function clear_gos(id_table)
	for i, v in ipairs(id_table) do
		go.delete(v)
		id_table[i] = nil
	end
end
